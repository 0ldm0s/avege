language: go
go:
  - tip
env:
  global:
      - NDK_VERSION=r13b
      - ANDROID_NDK_HOME=$HOME/.android/android-ndk-${NDK_VERSION}
      - DEPS=$HOME/.deps
      - ANDROID_ARM_TOOLCHAIN=$DEPS/android-toolchain-16-arm
      - ANDROID_X86_TOOLCHAIN=$DEPS/android-toolchain-16-x86
      - ANDROID_ARM_CC=$ANDROID_ARM_TOOLCHAIN/bin/arm-linux-androideabi-gcc
      - ANDROID_ARM_STRIP=$ANDROID_ARM_TOOLCHAIN/bin/arm-linux-androideabi-strip
      - ANDROID_X86_CC=$ANDROID_X86_TOOLCHAIN/bin/i686-linux-android-gcc
      - ANDROID_X86_STRIP=$ANDROID_X86_TOOLCHAIN/bin/i686-linux-android-strip
      - PATH=${ANDROID_NDK_HOME}:${ANDROID_HOME}/tools:${ANDROID_HOME}/platform-tools:${PATH}

install:
  - >
    if [ ! -d "$ANDROID_NDK_HOME" ]; then
        mkdir -p $ANDROID_NDK_HOME;
        pushd $HOME/.android;
        export ARCH=`uname -m`;
        wget -q http://dl.google.com/android/repository/android-ndk-${NDK_VERSION}-linux-${ARCH}.zip;
        unzip -q android-ndk-${NDK_VERSION}-linux-${ARCH}.zip;
        popd;
    fi
  - >
    if [ ! -d "$DEPS" ]; then
        mkdir -p $DEPS 
    fi
  - >
    if [ ! -d "$ANDROID_ARM_TOOLCHAIN" ]; then
        echo "Make standalone toolchain for ARM arch"
        $ANDROID_NDK_HOME/build/tools/make_standalone_toolchain.py --arch arm \
            --api 16 --install-dir $ANDROID_ARM_TOOLCHAIN
    fi
  - >
    if [ ! -d "$ANDROID_X86_TOOLCHAIN" ]; then
        echo "Make standalone toolchain for X86 arch"
        $ANDROID_NDK_HOME/build/tools/make_standalone_toolchain.py --arch x86 \
            --api 16 --install-dir $ANDROID_X86_TOOLCHAIN
    fi
  - go get github.com/op/go-logging
  - go get github.com/garyburd/redigo/redis
  - go get github.com/go-fsnotify/fsnotify
  - go get github.com/kardianos/osext
  - go get github.com/gin-gonic/gin
  - go get github.com/gorilla/websocket
  - go get github.com/DeanThompson/ginpprof
  - go get github.com/miekg/dns
  - go get github.com/aead/chacha20
  - go get github.com/codahale/chacha20
  - go get github.com/dgryski/go-camellia
  - go get github.com/dgryski/go-idea
  - go get github.com/dgryski/go-rc2
  - go get github.com/patrickmn/go-cache
  - go get github.com/RouterScript/ProxyClient
  - go get github.com/ftrvxmtrx/fd
script:
  - pwd && ls -l && cd src/avege
  - env GOPATH=$GOPATH:$PWD/../.. CGO_ENABLED=1 CC=$ANDROID_ARM_CC GOOS=android GOARCH=arm GOARM=7 go build -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. CGO_ENABLED=1 CC=$ANDROID_X86_CC GOOS=android GOARCH=386 go build -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=386 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=arm GOARM=5 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=arm GOARM=6 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=arm GOARM=7 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=arm64 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=ppc64 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=ppc64le GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=mips64 GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=mips64le GOOS=linux go install -ldflags="-s -w"
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=darwin go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=windows go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=386 GOOS=windows go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=freebsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=386 GOOS=freebsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=arm GOOS=freebsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=openbsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=386 GOOS=openbsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=netbsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=386 GOOS=netbsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=arm GOOS=netbsd go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=dragonfly go install
  - env GOPATH=$GOPATH:$PWD/../.. GOARCH=amd64 GOOS=solaris go install
deploy:
  provider: releases
  api_key:
    secure: qROlG3DcJ0KV4iucaggSGshDNZspXnL336bnsserCG0337wAmHT08sfdOZMHORZ4hmzNnMvoj1ImU7eW7v1JprphD3npf9jj0Ns/2zM2lydrXGAGcCF0Ec0r8b5ZLS9CKZ+0wftkfHXDThWxJvC7g01L52BsxIPfFqkCZIexMwGG3xAwxYnVP6CFJ7U9+dOzhGsjTG6UxvWb4eMZsM0oqa18aT1tMmuiYw/5Y4RpngKPl/BafiyriTLP88PoyY/SpJS3ttggymH5IXIbBGHzlNK6f5/Niz76TDhTtimH65xT/QgUrFJJMlMtbntraxYvwCBhgADM95AA7ncv0GKXiAJswnjPknVRzAtxRdUopY0Spblln0HjZuYjimbbmtv5OZaARgHK1/gQS8p2EGnsXzAFuY9asWGHlkayIxFYx1rQXwIMERrX4v6BwBqEK6ni6DwMxtlxF9rQvpZ2/Q8w/BzexEN8p1zQD784SS/UdWr2P81OsEH9wx+X8Z7Eyw4FM6XP6EMC+412xASLDhQwJK90ut7fME5BAOipgCx6rCaXlxm2e/XVNB6ZlB41mj42HmlvJzvi0i648yRtKHmqEv6Ff82LGET4PapT7OFES9MSZUupSr7NGocs4v8XGhrhL607ugJcC2qP5ZHy4eqGREImyYsdkv+T7lZazEuRe8s=
  file: 
    - avege-android-armv7.tar.gz          
    - avege-android-x86.tar.gz            
    - avege-darwin-amd64.tar.gz           
    - avege-dragonflybsd-amd64.tar.gz     
    - avege-freebsd-amd64.tar.gz          
    - avege-freebsd-arm.tar.gz            
    - avege-freebsd-x86.tar.gz            
    - avege-linux-amd64.tar.gz            
    - avege-linux-arm64.tar.gz            
    - avege-linux-armv6.tar.gz            
    - avege-linux-armv7.tar.gz            
    - avege-linux-mips64.tar.gz           
    - avege-linux-mips64le.tar.gz         
    - avege-linux-ppc64.tar.gz            
    - avege-linux-ppc64le.tar.gz          
    - avege-linux-x86.tar.gz              
    - avege-netbsd-amd64.tar.gz           
    - avege-netbsd-arm.tar.gz             
    - avege-netbsd-x86.tar.gz             
    - avege-openbsd-amd64.tar.gz          
    - avege-openbsd-x86.tar.gz            
    - avege-solaris.tar.gz                
    - avege-win-amd64.tar.gz              
    - avege-win-x86.tar.gz                
  on:
    repo: missdeer/avege
    tags: true
  skip_cleanup: true